demo()
scoping
help.start()
4+5
4**2
setwd("~/")
setwd("C:/Cursos/Diplomado R")
clear
cls
x2 = seq(1,10,1)
x2 = seq(1,10,1)
Y <- X1 %% 2 == 0
Y <- X1 %% 2 == 0
x1 <- seq(1,10,1)
Y <- X1 %% 2 == 0
Y <- x1 %% 2 == 0
#GUIA DE EJERCICIOS 1
#PREGUNTA 1
#INCISO A
#forma 1 - from 1, to 10, ++1
seq(1,10,1)
#forma2 - 20 numeros entre 1a 10 con la misma distancia
seq(1,10,length.out = 20)
#forma3 - secuencia de 1 a 10
seq(10)
#forma4 - concatenacion para formar un vector
c(1,2,3,4,5,6,7,8,9,10)
#INCISO B
x1 <- seq(1,10,1)
x1
x2 = seq(1,10,1)
x2
length(x1)
typeof(x1)
#INSISO C
t = sum(x1)
prod(x1)
#INCISO D
cumsum(x1)
cumprod(x1)
#INCISO E
Y <- x1 %% 2 == 0
Z <- x1[x1 %% 2 == 0]
sum(x1 %% 2 == 0)
x3 <- paste("mes_",x1)
x3 <- paste0("mes_",x1)
color1 <- c(rep("rojo",4),rep("azul",3))
color2 <- rep(c("rojo", "azul"))
color2 <- rep(c("rojo", "azul"), c(4,3))
typeof(x3)
x <- c("pedro" = 17,"Ana" = NA, "Maya" = 23, "Max" = NA, "paula" = 20)
x
y1 = x[-c(2,4)]
y1
y2 = x[-c("Ana","Max")]
y2 = x[c("pedro","Maya", "paula")]
Y2
y2
y3 = x[is.na(x) != FALSE ]
y3
y3 = x[is.na(x) != TRUE ]
Y3
y3
y4 = x[!is.na(x)]
y4
y5 = x[x["Ana"],x["pedro"]]
y5 = x[c("Ana","pedro")]
y5
y6
y6 = x[c(1,2)]
y6
t1 = sum(x)
t1
t1 = sum(x[!is.na(x)])
t1
t2 = length(x)
t1
t2
m1 = t1/t2
m2 = mean(x,na.rm = FALSE)
m1
m2
m2 = mean(x,na.rm = TRUE)
m2
t2 = length(x) - 2
t1 = sum(x[!is.na(x)])
t2 = length(x) - 2
m1 = t1/t2
m2 = mean(x,na.rm = TRUE)
m1
t1 = sum(y4)
t2 = length(y4)
m1 = t1/t2
m2 = mean(x,na.rm = TRUE)
t0 = x[!is.na(x)]
t1 = sum(t0)
t2 = length(t0)
m1 = t1/t2
m2 = mean(x,na.rm = TRUE)
m1
m2
#INCISO E
# Calcule la desviaciOn estandar de las edades de los 5 estudiantes usando la funcion sd y la formula para el calculo de la desviacion estandar:
t0 = x[!is.na(x)]
t1 = sum(t0)
t2 = length(t0)
m1 = t1/t2
m2 = sum(x[!is.na(x)])/length(x[!is.na(x)])
m3 = mean(x,na.rm = TRUE) #na.rm quita los valores NA
m2
d = sd(x,na.rm = TRUE)
d
d2 = sqrt(sum((x[!is.na(x)] - mean(x,na.rm = TRUE))**2)/(length(x[!is.na(x)])-1))
d2
sum(x<=10 & !is.na(x))
g1 = ((1+g0[1]/100))*100
g0 = c(20,-20)
g1 = ((1+g0[1]/100))*100
g1
g0 = c(20,-20)
g1 = (sqrt(((1+g0[1]/100)*(1+g0[2]/100))) -1)*100
g1
paste0("Tasa promedio anual es ",round((prod(1+g/100)**(1/length(g))-1)*100,2), "%" )
paste0("Tasa promedio anual es ",round((prod(1+g0/100)**(1/length(g0))-1)*100,2), "%" )
paste0("Tasa promedio anual es ",round((prod(1+g0/100)**(1/length(g0))-1)*100,2), "%" )
g0 = c(20,-20,4,15,-6)
g1 = (sqrt(((1+g0[1]/100)*(1+g0[2]/100))) -1)*100
g3 = (prod(1+g/100)**(1/length(g))-1)*100
paste0("Tasa promedio anual es ",round((prod(1+g0/100)**(1/length(g0))-1)*100,2), "%" )
x = c(4,5,6,8,10)
x1 = log(2)/log(1+x/100)
x1
z <- rnorm(10000)
z
z3 <-  kurtosis(z0)
library(moments)
skewness(z0)
kurtosis(z0)
library(moments)
clear
install.packages(“moments”)
install.packages("moments")
library(moments)
skewness(z0)
z0 <- rnorm(10000)
z1 <- mean(z0)
z2 <- sd(z0)
z3 <-  kurtosis(z0)
# sketnes = 0
# kurtosis = 3
library(moments)
skewness(z0)
kurtosis(z0)
b <- c(5,8,-4)
c <- c(0,1,-1)
x1 <- rbind(a,b,c)
a <- c(0,10,-5)
x1 <- rbind(a,b,c)
x1
x[3,2]
x1[3,2]
e <- c(0,10,-5,5,8,-4,0,1,-1)
e1 <- matrix(e,nrow = 3,ncol = 3,byrow = TRUE)
e <- c(0,10,-5,5,8,-4,0,1,-1)
e1 <- matrix(e,nrow = 3,ncol = 3,byrow = TRUE)    # POR FILA
e2 <- matrix(e,nrow = 3,ncol = 3)                 # POR COLUMNA
E1
e1
e2
d <- x1[c(2,3),3]
d
muestra_tota_dff <- data.frame(zona,hombres,mujeres)
install.packages("tibble")
zona <- c("A","B","C","D")
hombres <- c(800,200,700,300)
mujeres <- c(700,300,600,700)
#install.packages("tibble")
muestra_tota_dff <- data.frame(zona,hombres,mujeres)
muestra_tota_dff
library(tibble)
muestra_tota_dff <- tibble(zona,hombres,mujeres)
muestra_tota_dff
zona <- c("A","B","C","D")
hombres <- c(800,200,700,300)
mujeres <- c(700,300,600,700)
#install.packages("tibble")
muestra_tota_dff <- data.frame(zona,hombres,mujeres)
muestra_tota_dff
library(tibble)
muestra_tota_dff <- tibble(zona,hombres,mujeres)
muestra_tota_dff
library(tibble)
muestra_tota_tb <- tibble(zona,hombres,mujeres)
muestra_tota_tb
View(muestra_tota_dff)
View(muestra_tota_tb)
NCISO C
#INCISO C
#INCISO C
#INCISO C
m1 = summary(muestra_total_td)
m1 = summary(muestra_total_tb)
m1
#install.packages("tibble")
library(tibble)
muestra_total_tb <- tibble(zona,hombres,mujeres)
muestra_total_tb
#INCISO C
m1 = summary(muestra_total_tb)
m1
install.packages("dplyr")
